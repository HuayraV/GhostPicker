import sqlite3 as sql


class Database:
    def __init__(self):
        with sql.connect('db.db') as con:
            cur = con.cursor()
            cur.execute("""CREATE TABLE IF NOT EXISTS"ghosts" (
                "id"	        INTEGER,
                "type"	        TEXT UNIQUE,
                "emf5"	        INTEGER DEFAULT 0,
                "orb"	        INTEGER DEFAULT 0,
                "spirit_box"	INTEGER DEFAULT 0,
                "freezing_temp"	INTEGER DEFAULT 0,
                "fingerprints"	INTEGER DEFAULT 0,
                "ghost_writing"	INTEGER DEFAULT 0,
                "dots"	        INTEGER DEFAULT 0,
                "sanity"	    TEXT,
                "speed"	        TEXT,
                PRIMARY KEY("id"))"""
            )
            cur.execute("""CREATE TABLE IF NOT EXISTS"type_info" (
                "type"	        TEXT,
                "detect_method"	TEXT);"""
            )
        
        """0. Тип
        1. Первая улика
        2. Вторая улика
        3. Третья улика
        4. Необходимый уровень рассудка
        5. Его скорость
        6:. Метод обнаружения
        """
        self.type_info = [
            ('Banshee',
                'orb',
                'fingerprints',
                'dots',
                'Нет сведений',
                'Нет сведений',
                'Выбирает себе одну цель до конца игры/ее смерти, игнорируя остальных',
                'Можно услышать крик в микрофон',
                'Можно засечь при помощи датчика движения, она придет к цели и вернется обратно'
            ),
            ('Demon',
                'freezing_temp',
                'fingerprints',
                'ghost_writing',
                'менее 100%',
                'Нет сведений',
                'Всегда знает, где игроки',
                'Издает уникальное тяжелое дыхание в радиоприемник',
                'Двигается очень медленно, когда близок к игроку'
            ),
            ('Deogen',
                'spirit_box',
                'ghost_writing',
                'dots',
                'менее 40%',
                'Нет сведений',
                'Всегда знает, где игроки',
                'Издает уникальное тяжелое дыхание в радиоприемник',
                'Двигается очень медленно, когда близок к игроку'
            ),
            ('Goryo',
                'emf5',
                'fingerprints',
                'dots',
                'Нет сведений',
                'Нет сведений',
                'Можно увидеть на проекторе только через видеокамеру',
                'Не может менять комнату'
            ),
            ('Hantu',
                'orb',
                'freezing_temp',
                'fingerprints',
                'Нет сведений',
                'Зависит от температуры',
                'Замедляется в теплых помещениях и сильно ускоряется в минусовых'
            ),
            ('Jinn',
                'emf5',
                'freezing_temp',
                'fingerprints',
                'Нет сведений',
                'Быстрый, когда далеко',
                'Двигается быстрее, когда его жерства далеко',
                'Не может выключить щиток',
                'Когда он использует способность, можно увидеть ЭМП-2 на щитке'
            ),
            ('Mare',
                'orb',
                'spirit_box',
                'ghost_writing',
                'менее 60%, при свете 40%',
                'Нет сведений',
                'Не может включать свет'
            ),
            ('Moroi',
                'spirit_box',
                'freezing_temp',
                'ghost_writing',
                'Нет сведений',
                'Чем мешьше рассудок, тем быстрее',
                'Чем ниже рассудок, тем быстрее призрак',
                'Может проклять жертву в микрофон (рассудок снижается х2)'
            ),
            ('Myling',
                'emf5',
                'fingerprints',
                'ghost_writing',
                'Нет сведений',
                'Нет сведений',
                'Шаги начинаю быть слышимы, когда начинает сбоить техника'
            ),
            ('Obake',
                'emf5',
                'orb',
                'fingerprints',
                'Нет сведений',
                'Нет сведений',
                'Может оставить отпечаток с 6-ю пальцами',
                'Может не оставить отпечатка при взаимодействии, хотя до этого оставлял',
                'Меняет модельку во время охоты'
            ),
            ('Oni',
                'emf5',
                'freezing_temp',
                'dots',
                'Нет сведений',
                'Нет сведений',
                'Более активный, если рядом находятся несколько игроков',
                'Не может делать гостивент в виде облачка',
                'Почти не моргает во время охоты'
            ),
            ('Onryo',
                'orb',
                'spirit_box',
                'freezing_temp',
                'менее 60%',
                'Нет сведений',
                'После 3-х затушенных свечей начнет охоту',
                'Если при размещении креста и свечи в одном месте,' +
                'крест активировался, а свеча горит, то это не он'
            ),
            ('Phantom',
                'spirit_box',
                'fingerprints',
                'dots',
                'Нет сведений',
                'Нет сведений',
                'Пропадает при фотографировании, но охота/гостивент не прерывается',
                'Моделька надолго пропадает во время охоты'
            ),
            ('Poltergeist',
                'spirit_box',
                'fingerprints',
                'ghost_writing',
                'Нет сведений',
                'Нет сведений',
                'Активно взаимодействует',
                'Может бросить несколько предметов одновременно'
            ),
            ('Raiju',
                'emf5',
                'orb',
                'dots',
                'менее 65% при электронике, а так 50%',
                'Ускоряется от включенных приборов',
                'Когда рядом работают электроприборы, он будет ускорятся'
            ),
            ('Revenant',
                'orb',
                'freezing_temp',
                'ghost_writing',
                'Нет сведений',
                'Ускоряется, когда видит игрока',
                'Если есть визуальный контакт с жертвой, быстро ускоряется'
            ),
            ('Shade',
                'emf5',
                'freezing_temp',
                'ghost_writing',
                'менее 35%',
                'Нет сведений',
                'Не может начать охоту, если в комнате много игроков',
                'Имеет полу-прозрачный силуэт'
            ),
            ('Spirit',
                'emf5',
                'spirit_box',
                'ghost_writing',
                'Нет сведений',
                'Нет сведений',
                'Обкурить призрака и установить таймер на 3мин'
            ),
            ('Thaye',
                'orb',
                'ghost_writing',
                'dots',
                'менее 75%',
                'Очень быстрый в начале',
                'Очень активен в начале',
                'Стареет, когда игрок в его помещении, замедляясь'
            ),
            ('The Mimic',
                'spirit_box',
                'freezing_temp',
                'fingerprints',
                'Нет сведений',
                'Нет сведений',
                'Может перенимать повадки других призраков',
                'Всегда имеет призрачных огонек'
            ),
            ('The Twins',
                'emf5',
                'spirit_box',
                'freezing_temp',
                'Нет сведений',
                'Различается у братьев',
                'Может одновременно взаимодействовать в разных местах',
                'Один из близнецов медленне другого',
                'Можно увидеть ломаную линию на экране активности'
            ),
            ('Wraith',
                'emf5',
                'spirit_box',
                'dots',
                'Нет сведений',
                'Нет сведений',
                'Не наступает на соль',
                'Может активировать ЭМП-2 без активности'
            ),
            ('Yokai',
                'orb',
                'spirit_box',
                'dots',
                'менее 80% при разговорах, а так 50%',
                'Нет сведений',
                'Разговоры рядом с Ёкаем злят его и заставляют атаковать чаще'
            ),
            ('Yurei',
                'orb',
                'freezing_temp',
                'dots',
                'Нет сведений',
                'Нет сведений',
                'Может закрыть полностью открытую дверь до щелчка',
                'При использовании благовония в месте обитания призрака, ' +
                'он не перемещается по локации 1.5мин'
            )
        ]

    def ghosts_data_loader(self):
        with sql.connect('db.db') as con:
            cur = con.cursor()
            cur.execute("""SELECT * FROM ghosts""")
            __list = cur.fetchall()

            if len(__list) == 0:
                for el in self.type_info:
                    cur.execute(f"""INSERT INTO ghosts
                        (type, {el[1]}, {el[2]}, {el[3]}, sanity, speed)
                        VALUES ('{el[0]}', 1, 1, 1, '{el[4]}', '{el[5]}')"""
                    )
                else: con.commit()
    
    def typeInfo_data_loader(self):
        with sql.connect('db.db') as con:
            cur = con.cursor()
            cur.execute("""SELECT * FROM type_info""")
            __list = cur.fetchall()

            if len(__list) == 0:
                for el in self.type_info:
                    __type = el[0]
                    for detect_method in el[6:]:
                        cur.execute("""
                            INSERT INTO type_info (type, detect_method)
                            VALUES (?, ?)""", (__type, detect_method,)
                        )
                else: con.commit()
